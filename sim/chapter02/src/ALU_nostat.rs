#[cfg(test)]
mod tests {
use super::super::modules::*;
#[test]
fn test_ALU_nostat(){
let mut m = ALU::new();
m.x = 0;
m.y = 65535;
m.zx = true;
m.nx = false;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 0);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 1);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 0);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 0);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 0);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 1);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 1);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 0);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 65534);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 1);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 0);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 65535);
assert_eq!(m.x, 0);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, false);
m.x = 23456;
m.y = 7890;
m.zx = true;
m.nx = false;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 0);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 1);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 65535);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 23456);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 7890);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 42079);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 57645);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 42080);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 57646);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, true);
assert_eq!(m.nx, true);
assert_eq!(m.out, 23457);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 7891);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, true);
assert_eq!(m.nx, false);
assert_eq!(m.out, 23455);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 7889);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 31346);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 15566);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, true);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 49970);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, false);
assert_eq!(m.f, false);
assert_eq!(m.no, false);
assert_eq!(m.zy, false);
assert_eq!(m.nx, false);
assert_eq!(m.out, 6784);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.y, 7890);
assert_eq!(m.x, 23456);
assert_eq!(m.ny, true);
assert_eq!(m.f, false);
assert_eq!(m.no, true);
assert_eq!(m.zy, false);
assert_eq!(m.nx, true);
assert_eq!(m.out, 24562);
assert_eq!(m.zx, false);
}
}
