#[cfg(test)]
mod tests {
use super::super::modules::*;
#[test]
fn test_ALU(){
let mut m = ALU::new();
m.x = 0;
m.y = 65535;
m.zx = true;
m.nx = false;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 65534);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, false);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 0);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 65535);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.x = 17;
m.y = 3;
m.zx = true;
m.nx = false;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 0);
assert_eq!(m.zr, true);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = true;
m.nx = true;
m.zy = true;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 65535);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 17);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 3);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 65518);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 65532);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 65519);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 65533);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = true;
m.zy = true;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 18);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 4);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = true;
m.ny = true;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 16);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, true);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = true;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 2);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, true);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = true;
m.no = false;
m.prop();
assert_eq!(m.out, 20);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = false;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 14);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = true;
m.f = true;
m.no = true;
m.prop();
assert_eq!(m.out, 65522);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, true);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, true);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = false;
m.zy = false;
m.ny = false;
m.f = false;
m.no = false;
m.prop();
assert_eq!(m.out, 1);
assert_eq!(m.zr, false);
assert_eq!(m.nx, false);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, false);
assert_eq!(m.ng, false);
assert_eq!(m.no, false);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
m.zx = false;
m.nx = true;
m.zy = false;
m.ny = true;
m.f = false;
m.no = true;
m.prop();
assert_eq!(m.out, 19);
assert_eq!(m.zr, false);
assert_eq!(m.nx, true);
assert_eq!(m.x, 17);
assert_eq!(m.zy, false);
assert_eq!(m.ny, true);
assert_eq!(m.ng, false);
assert_eq!(m.no, true);
assert_eq!(m.y, 3);
assert_eq!(m.f, false);
assert_eq!(m.zx, false);
}
}
