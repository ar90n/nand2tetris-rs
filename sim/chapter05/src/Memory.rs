use behavior;

#[cfg(test)]
mod tests {
    use super::super::modules::*;
    use super::behavior::memory::*;
    #[test]
    fn test_Memory() {
        let mut m = Memory::new();
        m.in_ = 12345;
        m.load = true;
        m.address = 8192;
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.address = 16384;
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.in_ = 65535;
        m.load = true;
        m.address = 0;
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.in_ = 9999;
        m.load = false;
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 8192;
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 16384;
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.in_ = 12345;
        m.load = true;
        m.address = 0;
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.address = 16384;
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.in_ = 2222;
        m.load = true;
        m.address = 8192;
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 2222);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 2222);
        assert_eq!(m.in_, 2222);
        assert_eq!(m.load, true);
        m.in_ = 9999;
        m.load = false;
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 2222);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 2222);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 0;
        m.prop();
        assert_eq!(m.address, 0);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 16384;
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.load = false;
        m.address = 1;
        m.prop();
        assert_eq!(m.address, 1);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 2;
        m.prop();
        assert_eq!(m.address, 2);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 4;
        m.prop();
        assert_eq!(m.address, 4);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 8;
        m.prop();
        assert_eq!(m.address, 8);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 16;
        m.prop();
        assert_eq!(m.address, 16);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 32;
        m.prop();
        assert_eq!(m.address, 32);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 64;
        m.prop();
        assert_eq!(m.address, 64);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 128;
        m.prop();
        assert_eq!(m.address, 128);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 256;
        m.prop();
        assert_eq!(m.address, 256);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 512;
        m.prop();
        assert_eq!(m.address, 512);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 1024;
        m.prop();
        assert_eq!(m.address, 1024);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 2048;
        m.prop();
        assert_eq!(m.address, 2048);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 4096;
        m.prop();
        assert_eq!(m.address, 4096);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 8192;
        m.prop();
        assert_eq!(m.address, 8192);
        assert_eq!(m.out, 2222);
        assert_eq!(m.in_, 9999);
        assert_eq!(m.load, false);
        m.address = 4660;
        m.in_ = 1234;
        m.load = true;
        m.prop();
        assert_eq!(m.address, 4660);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 1234);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 4660);
        assert_eq!(m.out, 1234);
        assert_eq!(m.in_, 1234);
        assert_eq!(m.load, true);
        m.load = false;
        m.address = 8756;
        m.prop();
        assert_eq!(m.address, 8756);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 1234);
        assert_eq!(m.load, false);
        m.address = 25140;
        m.prop();
        assert_eq!(m.address, 25140);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 1234);
        assert_eq!(m.load, false);
        m.address = 9029;
        m.in_ = 2345;
        m.load = true;
        m.prop();
        assert_eq!(m.address, 9029);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 2345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 9029);
        assert_eq!(m.out, 2345);
        assert_eq!(m.in_, 2345);
        assert_eq!(m.load, true);
        m.load = false;
        m.address = 837;
        m.prop();
        assert_eq!(m.address, 837);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 2345);
        assert_eq!(m.load, false);
        m.address = 17221;
        m.prop();
        assert_eq!(m.address, 17221);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 2345);
        assert_eq!(m.load, false);
        m.in_ = 0;
        m.load = true;
        m.address = 16384;
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 0);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 16384);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 0);
        assert_eq!(m.load, true);
        m.address = 24576;
        m.prop();
        m.posedge_clk();
        m.prop();
        m.posedge_clk();
        m.prop();
        m.write(24576, 75);
        m.prop();
        assert_eq!(m.address, 24576);
        assert_eq!(m.out, 75);
        assert_eq!(m.in_, 0);
        assert_eq!(m.load, true);
        m.in_ = 12345;
        m.load = true;
        m.address = 4047;
        m.prop();
        assert_eq!(m.address, 4047);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 4047);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.address = 12239;
        m.prop();
        assert_eq!(m.address, 12239);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 12239);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 12345);
        assert_eq!(m.load, true);
        m.load = true;
        m.in_ = 65535;
        m.address = 20431;
        m.prop();
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 20431);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.address = 20559;
        m.prop();
        m.posedge_clk();
        m.prop();
        assert_eq!(m.address, 20559);
        assert_eq!(m.out, 65535);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.address = 4047;
        m.prop();
        assert_eq!(m.address, 4047);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.address = 12239;
        m.prop();
        assert_eq!(m.address, 12239);
        assert_eq!(m.out, 12345);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, true);
        m.load = false;
        m.address = 20430;
        m.prop();
        assert_eq!(m.address, 20430);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20429;
        m.prop();
        assert_eq!(m.address, 20429);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20427;
        m.prop();
        assert_eq!(m.address, 20427);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20423;
        m.prop();
        assert_eq!(m.address, 20423);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20447;
        m.prop();
        assert_eq!(m.address, 20447);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20463;
        m.prop();
        assert_eq!(m.address, 20463);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20367;
        m.prop();
        assert_eq!(m.address, 20367);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20303;
        m.prop();
        assert_eq!(m.address, 20303);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 20175;
        m.prop();
        assert_eq!(m.address, 20175);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 19919;
        m.prop();
        assert_eq!(m.address, 19919);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 19407;
        m.prop();
        assert_eq!(m.address, 19407);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 18383;
        m.prop();
        assert_eq!(m.address, 18383);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.address = 24527;
        m.prop();
        assert_eq!(m.address, 24527);
        assert_eq!(m.out, 0);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
        m.load = false;
        m.address = 24576;
        m.prop();
        m.posedge_clk();
        m.prop();
        m.posedge_clk();
        m.prop();
        m.write(24576, 89);
        m.prop();
        assert_eq!(m.address, 24576);
        assert_eq!(m.out, 89);
        assert_eq!(m.in_, 65535);
        assert_eq!(m.load, false);
    }
}
