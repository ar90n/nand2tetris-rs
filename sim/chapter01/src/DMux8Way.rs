#[cfg(test)]
mod tests {
use super::super::modules::*;
#[test]
fn test_DMux8Way(){
let mut m = DMux8Way::new();
m.in_ = false;
m.sel = 0;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 0);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 1;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 1);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 2;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 2);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 3;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 3);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 4;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 4);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 5;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 5);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 6;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 6);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 7;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, false);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 7);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.in_ = true;
m.sel = 0;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, true);
assert_eq!(m.sel, 0);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 1;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, true);
assert_eq!(m.a, false);
assert_eq!(m.sel, 1);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 2;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, true);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 2);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 3;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 3);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, true);
m.sel = 4;
m.prop();
assert_eq!(m.e, true);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 4);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 5;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 5);
assert_eq!(m.g, false);
assert_eq!(m.f, true);
assert_eq!(m.d, false);
m.sel = 6;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, false);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 6);
assert_eq!(m.g, true);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
m.sel = 7;
m.prop();
assert_eq!(m.e, false);
assert_eq!(m.in_, true);
assert_eq!(m.c, false);
assert_eq!(m.h, true);
assert_eq!(m.b, false);
assert_eq!(m.a, false);
assert_eq!(m.sel, 7);
assert_eq!(m.g, false);
assert_eq!(m.f, false);
assert_eq!(m.d, false);
}
}
