#[cfg(test)]
mod tests {
use super::super::modules::*;
#[test]
fn test_Register(){
let mut m = Register::new();
m.in_ = 0;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 0);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 0);
m.in_ = 0;
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 0);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 0);
m.in_ = 33413;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 33413);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 33413);
m.in_ = 11111;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 11111);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 11111);
m.in_ = 33413;
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 33413);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 33413);
m.in_ = 33413;
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 33413);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 33413);
m.in_ = 33413;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 33413);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 33413);
m.in_ = 12345;
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 33413);
assert_eq!(m.in_, 12345);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 12345);
assert_eq!(m.in_, 12345);
m.in_ = 0;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 12345);
assert_eq!(m.in_, 0);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 12345);
assert_eq!(m.in_, 0);
m.in_ = 0;
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 12345);
assert_eq!(m.in_, 0);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 0);
m.in_ = 1;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 1);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 1);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 0);
assert_eq!(m.in_, 1);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 1);
assert_eq!(m.in_, 1);
m.in_ = 2;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 1);
assert_eq!(m.in_, 2);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 1);
assert_eq!(m.in_, 2);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 1);
assert_eq!(m.in_, 2);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 2);
assert_eq!(m.in_, 2);
m.in_ = 4;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 2);
assert_eq!(m.in_, 4);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 2);
assert_eq!(m.in_, 4);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 2);
assert_eq!(m.in_, 4);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 4);
assert_eq!(m.in_, 4);
m.in_ = 8;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 4);
assert_eq!(m.in_, 8);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 4);
assert_eq!(m.in_, 8);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 4);
assert_eq!(m.in_, 8);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 8);
assert_eq!(m.in_, 8);
m.in_ = 16;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 8);
assert_eq!(m.in_, 16);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 8);
assert_eq!(m.in_, 16);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 8);
assert_eq!(m.in_, 16);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 16);
assert_eq!(m.in_, 16);
m.in_ = 32;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 16);
assert_eq!(m.in_, 32);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 16);
assert_eq!(m.in_, 32);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 16);
assert_eq!(m.in_, 32);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 32);
assert_eq!(m.in_, 32);
m.in_ = 64;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 32);
assert_eq!(m.in_, 64);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 32);
assert_eq!(m.in_, 64);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 32);
assert_eq!(m.in_, 64);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 64);
assert_eq!(m.in_, 64);
m.in_ = 128;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 64);
assert_eq!(m.in_, 128);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 64);
assert_eq!(m.in_, 128);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 64);
assert_eq!(m.in_, 128);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 128);
assert_eq!(m.in_, 128);
m.in_ = 256;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 128);
assert_eq!(m.in_, 256);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 128);
assert_eq!(m.in_, 256);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 128);
assert_eq!(m.in_, 256);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 256);
assert_eq!(m.in_, 256);
m.in_ = 512;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 256);
assert_eq!(m.in_, 512);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 256);
assert_eq!(m.in_, 512);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 256);
assert_eq!(m.in_, 512);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 512);
assert_eq!(m.in_, 512);
m.in_ = 1024;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 512);
assert_eq!(m.in_, 1024);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 512);
assert_eq!(m.in_, 1024);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 512);
assert_eq!(m.in_, 1024);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 1024);
assert_eq!(m.in_, 1024);
m.in_ = 2048;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 1024);
assert_eq!(m.in_, 2048);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 1024);
assert_eq!(m.in_, 2048);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 1024);
assert_eq!(m.in_, 2048);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 2048);
assert_eq!(m.in_, 2048);
m.in_ = 4096;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 2048);
assert_eq!(m.in_, 4096);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 2048);
assert_eq!(m.in_, 4096);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 2048);
assert_eq!(m.in_, 4096);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 4096);
assert_eq!(m.in_, 4096);
m.in_ = 8192;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 4096);
assert_eq!(m.in_, 8192);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 4096);
assert_eq!(m.in_, 8192);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 4096);
assert_eq!(m.in_, 8192);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 8192);
assert_eq!(m.in_, 8192);
m.in_ = 16384;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 8192);
assert_eq!(m.in_, 16384);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 8192);
assert_eq!(m.in_, 16384);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 8192);
assert_eq!(m.in_, 16384);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 16384);
assert_eq!(m.in_, 16384);
m.in_ = 32768;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 16384);
assert_eq!(m.in_, 32768);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 16384);
assert_eq!(m.in_, 32768);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 16384);
assert_eq!(m.in_, 32768);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 32768);
assert_eq!(m.in_, 32768);
m.in_ = 65534;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 32768);
assert_eq!(m.in_, 65534);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 32768);
assert_eq!(m.in_, 65534);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 32768);
assert_eq!(m.in_, 65534);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65534);
assert_eq!(m.in_, 65534);
m.in_ = 65533;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65534);
assert_eq!(m.in_, 65533);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65534);
assert_eq!(m.in_, 65533);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65534);
assert_eq!(m.in_, 65533);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65533);
assert_eq!(m.in_, 65533);
m.in_ = 65531;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65533);
assert_eq!(m.in_, 65531);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65533);
assert_eq!(m.in_, 65531);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65533);
assert_eq!(m.in_, 65531);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65531);
assert_eq!(m.in_, 65531);
m.in_ = 65527;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65531);
assert_eq!(m.in_, 65527);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65531);
assert_eq!(m.in_, 65527);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65531);
assert_eq!(m.in_, 65527);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65527);
assert_eq!(m.in_, 65527);
m.in_ = 65519;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65527);
assert_eq!(m.in_, 65519);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65527);
assert_eq!(m.in_, 65519);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65527);
assert_eq!(m.in_, 65519);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65519);
assert_eq!(m.in_, 65519);
m.in_ = 65503;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65519);
assert_eq!(m.in_, 65503);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65519);
assert_eq!(m.in_, 65503);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65519);
assert_eq!(m.in_, 65503);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65503);
assert_eq!(m.in_, 65503);
m.in_ = 65471;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65503);
assert_eq!(m.in_, 65471);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65503);
assert_eq!(m.in_, 65471);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65503);
assert_eq!(m.in_, 65471);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65471);
assert_eq!(m.in_, 65471);
m.in_ = 65407;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65471);
assert_eq!(m.in_, 65407);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65471);
assert_eq!(m.in_, 65407);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65471);
assert_eq!(m.in_, 65407);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65407);
assert_eq!(m.in_, 65407);
m.in_ = 65279;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65407);
assert_eq!(m.in_, 65279);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65407);
assert_eq!(m.in_, 65279);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65407);
assert_eq!(m.in_, 65279);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65279);
assert_eq!(m.in_, 65279);
m.in_ = 65023;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65279);
assert_eq!(m.in_, 65023);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65279);
assert_eq!(m.in_, 65023);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65279);
assert_eq!(m.in_, 65023);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65023);
assert_eq!(m.in_, 65023);
m.in_ = 64511;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65023);
assert_eq!(m.in_, 64511);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 65023);
assert_eq!(m.in_, 64511);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 65023);
assert_eq!(m.in_, 64511);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 64511);
assert_eq!(m.in_, 64511);
m.in_ = 63487;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 64511);
assert_eq!(m.in_, 63487);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 64511);
assert_eq!(m.in_, 63487);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 64511);
assert_eq!(m.in_, 63487);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 63487);
assert_eq!(m.in_, 63487);
m.in_ = 61439;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 63487);
assert_eq!(m.in_, 61439);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 63487);
assert_eq!(m.in_, 61439);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 63487);
assert_eq!(m.in_, 61439);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 61439);
assert_eq!(m.in_, 61439);
m.in_ = 57343;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 61439);
assert_eq!(m.in_, 57343);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 61439);
assert_eq!(m.in_, 57343);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 61439);
assert_eq!(m.in_, 57343);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 57343);
assert_eq!(m.in_, 57343);
m.in_ = 49151;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 57343);
assert_eq!(m.in_, 49151);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 57343);
assert_eq!(m.in_, 49151);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 57343);
assert_eq!(m.in_, 49151);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 49151);
assert_eq!(m.in_, 49151);
m.in_ = 32767;
m.load = false;
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 49151);
assert_eq!(m.in_, 32767);
m.posedge_clk();
m.prop();
assert_eq!(m.load, false);
assert_eq!(m.out, 49151);
assert_eq!(m.in_, 32767);
m.load = true;
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 49151);
assert_eq!(m.in_, 32767);
m.posedge_clk();
m.prop();
assert_eq!(m.load, true);
assert_eq!(m.out, 32767);
assert_eq!(m.in_, 32767);
}
}
